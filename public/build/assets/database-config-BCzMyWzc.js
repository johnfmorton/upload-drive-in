class u{constructor(){this.initializeEventListeners(),this.initializeFormState()}initializeEventListeners(){document.querySelectorAll(".database-type-radio").forEach(o=>{o.addEventListener("change",this.handleDatabaseTypeChange.bind(this))}),document.querySelectorAll(".mysql-field").forEach(o=>{o.addEventListener("input",this.handleMySQLFieldChange.bind(this)),o.addEventListener("blur",this.validateMySQLField.bind(this))});const s=document.getElementById("test-mysql-connection");s&&s.addEventListener("click",this.testMySQLConnection.bind(this));const e=document.getElementById("test-sqlite-connection");e&&e.addEventListener("click",this.testSQLiteConnection.bind(this));const t=document.getElementById("toggle-password");t&&t.addEventListener("click",this.togglePasswordVisibility.bind(this));const n=document.getElementById("sqlite-custom-path");n&&n.addEventListener("change",this.toggleSQLiteCustomPath.bind(this));const a=document.getElementById("show-hosting-help");a&&a.addEventListener("click",this.showHostingInstructions.bind(this));const i=document.getElementById("database-form");i&&i.addEventListener("submit",this.handleFormSubmission.bind(this))}initializeFormState(){const s=document.querySelector(".database-type-radio:checked");s&&this.showDatabaseConfig(s.value),this.updateMySQLTestButtonState()}handleDatabaseTypeChange(s){const e=s.target.value;this.showDatabaseConfig(e),this.clearConnectionStatus()}showDatabaseConfig(s){const e=document.getElementById("sqlite-config"),t=document.getElementById("mysql-config");s==="sqlite"?(e==null||e.classList.remove("hidden"),t==null||t.classList.add("hidden")):s==="mysql"&&(e==null||e.classList.add("hidden"),t==null||t.classList.remove("hidden"),this.updateMySQLTestButtonState())}handleMySQLFieldChange(s){this.validateMySQLField(s),this.updateMySQLTestButtonState(),this.clearConnectionStatus()}validateMySQLField(s){const e=s.target,t=e.value.trim();e.classList.remove("border-red-300","border-green-300");const n=e.parentNode.querySelector(".field-validation-message");n&&n.remove();let a=!0,i="";switch(e.id){case"mysql_host":t?t.length>255&&(a=!1,i="Host must not exceed 255 characters"):(a=!1,i="Host is required");break;case"mysql_port":const o=parseInt(t);t?(isNaN(o)||o<1||o>65535)&&(a=!1,i="Port must be between 1 and 65535"):(a=!1,i="Port is required");break;case"mysql_database":t?/^[a-zA-Z0-9_]+$/.test(t)?t.length>64&&(a=!1,i="Database name must not exceed 64 characters"):(a=!1,i="Only letters, numbers, and underscores allowed"):(a=!1,i="Database name is required");break;case"mysql_username":t?t.length>32&&(a=!1,i="Username must not exceed 32 characters"):(a=!1,i="Username is required");break;case"mysql_password":t.length>255&&(a=!1,i="Password must not exceed 255 characters");break}s.type==="blur"&&t&&(a?e.classList.add("border-green-300"):(e.classList.add("border-red-300"),this.showFieldValidationMessage(e,i)))}showFieldValidationMessage(s,e){const t=document.createElement("p");t.className="mt-1 text-xs text-red-600 field-validation-message",t.textContent=e,s.parentNode.appendChild(t)}updateMySQLTestButtonState(){const s=document.getElementById("test-mysql-connection");if(!s)return;const t=["mysql_host","mysql_port","mysql_database","mysql_username"].every(n=>{const a=document.getElementById(n);return a&&a.value.trim()!==""});s.disabled=!t,t?(s.classList.remove("opacity-50","cursor-not-allowed"),s.classList.add("hover:bg-gray-50")):(s.classList.add("opacity-50","cursor-not-allowed"),s.classList.remove("hover:bg-gray-50"))}async testMySQLConnection(){var l,d;const s=document.getElementById("test-mysql-connection"),e=document.getElementById("mysql-connection-status"),t=document.getElementById("connection-progress"),n=document.getElementById("progress-bar"),a=document.getElementById("progress-text"),i=document.getElementById("mysql-loading"),o=document.getElementById("test-button-text");s.disabled=!0,i==null||i.classList.remove("hidden"),o.textContent="Testing...",t==null||t.classList.remove("hidden"),e==null||e.classList.add("hidden"),this.animateProgress(n,a,[{progress:20,text:"Connecting to MySQL server..."},{progress:50,text:"Authenticating user credentials..."},{progress:80,text:"Testing database access..."},{progress:100,text:"Finalizing connection test..."}]);try{const c={database_type:"mysql",host:document.getElementById("mysql_host").value,port:document.getElementById("mysql_port").value,database:document.getElementById("mysql_database").value,username:document.getElementById("mysql_username").value,password:document.getElementById("mysql_password").value},r=await fetch("/setup/ajax/test-database",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":((l=document.querySelector('meta[name="csrf-token"]'))==null?void 0:l.getAttribute("content"))||((d=document.querySelector('input[name="_token"]'))==null?void 0:d.value)},body:JSON.stringify(c)}),m=await r.json();setTimeout(()=>{t==null||t.classList.add("hidden"),e==null||e.classList.remove("hidden"),this.displayConnectionResult(m,r.ok)},1e3)}catch(c){console.error("Connection test failed:",c),setTimeout(()=>{t==null||t.classList.add("hidden"),e==null||e.classList.remove("hidden"),this.displayConnectionResult({success:!1,message:"Connection test failed due to network error",troubleshooting:["Check your internet connection","Verify the server is accessible"]},!1)},1e3)}finally{s.disabled=!1,i==null||i.classList.add("hidden"),o.textContent="Test Connection",this.updateMySQLTestButtonState()}}async testSQLiteConnection(){var n,a,i;const s=document.getElementById("test-sqlite-connection"),e=document.getElementById("sqlite-status-result"),t=document.getElementById("sqlite-loading");s.disabled=!0,t==null||t.classList.remove("hidden"),e==null||e.classList.remove("hidden"),e.innerHTML='<p class="text-xs text-gray-600">Checking SQLite configuration...</p>';try{const o=((n=document.getElementById("sqlite_path"))==null?void 0:n.value)||"",l=await fetch("/setup/ajax/test-database",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":((a=document.querySelector('meta[name="csrf-token"]'))==null?void 0:a.getAttribute("content"))||((i=document.querySelector('input[name="_token"]'))==null?void 0:i.value)},body:JSON.stringify({database_type:"sqlite",database:"test_database",sqlite_path:o})}),d=await l.json();this.displaySQLiteResult(d,l.ok)}catch(o){console.error("SQLite test failed:",o),this.displaySQLiteResult({success:!1,message:"SQLite test failed due to network error"},!1)}finally{s.disabled=!1,t==null||t.classList.add("hidden")}}animateProgress(s,e,t){let n=0;const a=()=>{if(n<t.length){const i=t[n];s.style.width=`${i.progress}%`,e.textContent=i.text,n++,setTimeout(a,500)}};a()}displayConnectionResult(s,e){const t=document.getElementById("mysql-connection-status");if(!t)return;let n="";s.success?n=`
                <div class="flex items-start">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-sm font-medium text-green-800">Connection Successful!</h3>
                        <div class="mt-2 text-sm text-green-700">
                            <p>${s.message}</p>
                            ${s.details?this.formatConnectionDetails(s.details):""}
                        </div>
                    </div>
                </div>
            `:n=`
                <div class="flex items-start">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-sm font-medium text-red-800">Connection Failed</h3>
                        <div class="mt-2 text-sm text-red-700">
                            <p>${s.message}</p>
                            ${s.troubleshooting?this.formatTroubleshootingSteps(s.troubleshooting):""}
                            ${s.hosting_instructions?this.formatHostingInstructions(s.hosting_instructions):""}
                        </div>
                    </div>
                </div>
            `,t.innerHTML=n}displaySQLiteResult(s,e){const t=document.getElementById("sqlite-status-result");if(!t)return;let n="";s.success?n=`
                <div class="flex items-center text-green-700">
                    <svg class="w-4 h-4 mr-2 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                    </svg>
                    <span class="text-xs">${s.message}</span>
                </div>
            `:n=`
                <div class="flex items-start text-red-700">
                    <svg class="w-4 h-4 mr-2 mt-0.5 text-red-600 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                    </svg>
                    <span class="text-xs">${s.message}</span>
                </div>
            `,t.innerHTML=n}formatConnectionDetails(s){if(!s||typeof s!="object")return"";let e='<div class="mt-2 space-y-1">';for(const[t,n]of Object.entries(s))e+=`<div class="text-xs">• ${n}</div>`;return e+="</div>",e}formatTroubleshootingSteps(s){if(!Array.isArray(s)||s.length===0)return"";let e='<div class="mt-3"><h4 class="text-xs font-medium text-red-800">Troubleshooting Steps:</h4><ul class="mt-1 text-xs space-y-1">';return s.slice(0,5).forEach(t=>{e+=`<li>• ${t}</li>`}),e+="</ul></div>",e}formatHostingInstructions(s){if(!s||typeof s!="object")return"";let e=`<div class="mt-3"><button type="button" class="text-xs text-red-600 hover:text-red-800 underline" onclick="this.nextElementSibling.classList.toggle('hidden')">Show hosting provider instructions</button>`;e+='<div class="hidden mt-2 space-y-2">';for(const[t,n]of Object.entries(s))n.title&&n.steps&&(e+=`<div class="text-xs"><strong>${n.title}:</strong><ul class="mt-1 ml-3 space-y-0.5">`,n.steps.slice(0,3).forEach(a=>{e+=`<li>• ${a}</li>`}),e+="</ul></div>");return e+="</div></div>",e}togglePasswordVisibility(){const s=document.getElementById("mysql_password"),e=document.getElementById("password-show-icon"),t=document.getElementById("password-hide-icon");s.type==="password"?(s.type="text",e==null||e.classList.add("hidden"),t==null||t.classList.remove("hidden")):(s.type="password",e==null||e.classList.remove("hidden"),t==null||t.classList.add("hidden"))}toggleSQLiteCustomPath(){const s=document.getElementById("sqlite-custom-path"),e=document.getElementById("sqlite-path-input");if(s.checked)e==null||e.classList.remove("hidden");else{e==null||e.classList.add("hidden");const t=document.getElementById("sqlite_path");t&&(t.value="")}}showHostingInstructions(){alert("Hosting provider instructions would be shown here. This could be implemented as a modal or expandable section.")}clearConnectionStatus(){const s=document.getElementById("mysql-connection-status"),e=document.getElementById("sqlite-status-result"),t=document.getElementById("connection-progress");s==null||s.classList.add("hidden"),e==null||e.classList.add("hidden"),t==null||t.classList.add("hidden")}handleFormSubmission(s){var t;return((t=document.querySelector(".database-type-radio:checked"))==null?void 0:t.value)==="mysql"&&["mysql_host","mysql_port","mysql_database","mysql_username"].filter(i=>{const o=document.getElementById(i);return!o||!o.value.trim()}).length>0?(s.preventDefault(),alert("Please fill in all required MySQL fields before submitting."),!1):!0}}document.addEventListener("DOMContentLoaded",()=>{new u});
